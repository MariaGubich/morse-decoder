function decode(expr) {
    const MORSE_TABLE = {
        '.-':     'a',
        '-...':   'b',
        '-.-.':   'c',
        '-..':    'd',
        '.':      'e',
        '..-.':   'f',
        '--.':    'g',
        '....':   'h',
        '..':     'i',
        '.---':   'j',
        '-.-':    'k',
        '.-..':   'l',
        '--':     'm',
        '-.':     'n',
        '---':    'o',
        '.--.':   'p',
        '--.-':   'q',
        '.-.':    'r',
        '...':    's',
        '-':      't',
        '..-':    'u',
        '...-':   'v',
        '.--':    'w',
        '-..-':   'x',
        '-.--':   'y',
        '--..':   'z',
        '.----':  '1',
        '..---':  '2',
        '...--':  '3',
        '....-':  '4',
        '.....':  '5',
        '-....':  '6',
        '--...':  '7',
        '---..':  '8',
        '----.':  '9',
        '-----':  '0',
        '**********': ' ',
    };

    let result = '';
  
  // Разбиваем строку на коды длиной 10 символов
  const codes = expr.match(/.{1,10}/g);
  
  // Проходим по каждому коду
  for (let code of codes) {
    // Преобразуем "1" и "0" в тире и точку, а также удаляем ведущие нули
    code = code.replace(/10/g, '.').replace(/11/g, '-').replace(/0+/g, '');
    
    // Получаем соответствующую букву из таблицы MORSE_TABLE
    const letter = MORSE_TABLE[code];
    
    // Если буква найдена, добавляем её к результату
    if (letter) {
      result += letter;
    }
  }
  
  return result;
}

module.exports = {
    decode
}